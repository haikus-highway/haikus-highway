{"version":3,"sources":["assets/haiku-japanese.jpg","firebase.js","removeFromArray.js","Components/Header.js","Components/Form.js","Components/Haiku.js","Components/RelatedWords.js","Components/Restart.js","Components/TitleForm.js","Components/Journal.js","App.js","randomizers.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","removeFromArray","item","array","i","length","splice","Header","props","className","onClick","createHaiku","showJournal","Form","onSubmit","handleFormSubmit","action","htmlFor","placeholder","onChange","handleUserInput","type","id","name","pattern","autoComplete","value","inputTextValue","Haiku","firstLine","map","index","key","word","secondLine","thirdLine","currentLine","RelatedWords","tenRelatedWords","totalSyllables","wordChosen","moreWords","Restart","save","TitleForm","saveHaiku","handleTitleInput","handleAuthorInput","Journal","savedHaikus","haiku","title","Math","random","displayJournalLog","activeHaiku","author","date","App","e","preventDefault","axios","url","state","userInput","method","responseType","then","response","totalSyllablesSoFar","getSyllablesPerLine","maxSyllablesAllowed","checkMaxSyllablesAllowed","data","toLowerCase","numSyllables","firstLineCopy","secondLineCopy","thirdLineCopy","currentLineCopy","push","setState","formVisible","messageToUser","getRelatedWords","catch","suggestions","areRelatedWordsLoading","filterResults","syllablesSoFar","randomizeWords","relatedWords","min","max","relatedWordsCopy","randomWords","randomIndex","ceil","floor","undefined","results","regex","filteredResults","filter","match","allRelatedWords","line","numberOfSyllablesLine","forEach","target","autoCompleteSuggestions","input","chooseSuggestedWord","lineArrayCopy","totalSyllablesCopy","headerVisible","titleInput","authorInput","toggleTitleForm","showTitleForm","toggleJournal","currentDate","Date","year","getFullYear","monthNumber","getMonth","dayOfMonth","getDate","database","ref","event","parseInt","on","savedHaikusArray","savedHaikusRaw","val","currentSyllables","this","maxSyllables","showPreloader","setTimeout","suggestion","size","color","css","src","HaikuImage","alt","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,4C,kOCmBzCC,IAASC,cAVgB,CACnBC,OAAQ,0CACZC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,cACnBC,MAAO,6CAMIR,QAAf,E,wBCtBe,SAASS,EAAgBC,EAAMC,GAC1C,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAC1BD,EAAMC,KAAOF,GACbC,EAAMG,OAAOF,EAAG,GCD5B,IAqBeG,EArBA,SAACC,GACd,OACE,gCACE,yBAAKC,UAAU,WACb,uCACA,8LAEA,yBAAKA,UAAU,iBACb,4BAAQA,UAAU,aAAaC,QAASF,EAAMG,aAA9C,SAIA,4BAAQF,UAAU,aAAaC,QAASF,EAAMI,aAA9C,eCFKC,EAVF,SAACL,GACZ,OACE,0BAAMM,SAAUN,EAAMO,iBAAkBC,OAAO,SAASP,UAAU,gBAChE,2BAAOA,UAAU,iBAAiBQ,QAAQ,aAA1C,gBACA,2BAAOC,YAAY,mBAAmBC,SAAUX,EAAMY,gBAAiBC,KAAK,OAAOC,GAAG,YAAYC,KAAK,YAAYC,QAAQ,cAAcC,aAAa,MAAMC,MAAOlB,EAAMmB,iBACzK,4BAAQN,KAAK,UAAb,YCmDSO,EAxDD,SAACpB,GACb,OACE,yBAAKC,UAAU,wBAGXD,EAAMqB,UAAUxB,OAAS,EACvB,uBAAGI,UAAU,kBAETD,EAAMqB,UAAUC,KAAI,SAAC5B,EAAM6B,GACzB,OAAO,0BAAMC,IAAK9B,EAAK+B,KAAOF,GAAQ7B,EAAK+B,KAApC,SAIb,KAIFzB,EAAM0B,WAAW7B,OAAS,EACxB,uBAAGI,UAAU,mBAETD,EAAM0B,WAAWJ,KAAI,SAAC5B,EAAM6B,GAC1B,OAAO,0BAAMC,IAAK9B,EAAK+B,KAAOF,GAAQ7B,EAAK+B,KAApC,SAIb,KAIFzB,EAAM2B,UAAU9B,OAAS,EACvB,uBAAGI,UAAU,kBAETD,EAAM2B,UAAUL,KAAI,SAAC5B,EAAM6B,GACzB,OAAO,0BAAMC,IAAK9B,EAAK+B,KAAOF,GAAQ7B,EAAK+B,KAApC,SAIb,KAIFzB,EAAM4B,YAAY/B,OAAS,EACzB,uBAAGI,UAAU,8BAETD,EAAM4B,YAAYN,KAAI,SAAC5B,EAAM6B,GAC3B,OAAO,0BAAMC,IAAK9B,EAAK+B,KAAOF,GAAQ7B,EAAK+B,KAApC,SAIb,OCrBKI,EA5BM,SAAC7B,GACpB,OACE,yBAAKC,UAAU,WACb,wBAAIA,UAAU,gBAEVD,EAAM8B,gBAAgBjC,OAAS,GAAKG,EAAM+B,eAAiB,GACzD/B,EAAM8B,gBAAgBR,KAAI,SAAC5B,EAAM6B,GAC/B,OACE,wBAAIC,IAAK9B,EAAK+B,KAAOF,GACnB,4BAAQtB,UAAU,aAAaC,QAAS,kBAAMF,EAAMgC,WAAWtC,KAAQA,EAAK+B,UAIlF,MAKJzB,EAAM8B,gBAAgBjC,OAAS,GAAKG,EAAM+B,eAAiB,GACzD,yBAAK9B,UAAU,mBACb,4BAAQC,QAASF,EAAMiC,WAAvB,eAEF,OCZKC,EAVC,SAAClC,GACf,OACE,yBAAKC,UAAU,mBACb,uDACA,4BAAQC,QAASF,EAAMG,aAAvB,SACA,4BAAQD,QAASF,EAAMmC,MAAvB,U,kCCOSC,EAZG,SAACpC,GACjB,OACE,0BAAMQ,OAAO,SAASF,SAAUN,EAAMqC,UAAWpC,UAAU,qBACzD,2BAAOQ,QAAQ,aAAaR,UAAU,kBAAtC,WACA,2BAAOU,SAAUX,EAAMsC,iBAAkBzB,KAAK,OAAOC,GAAG,aAAaC,KAAK,aAAaL,YAAY,UACnG,2BAAOD,QAAQ,cAAcR,UAAU,kBAAvC,YACA,2BAAOU,SAAUX,EAAMuC,kBAAmB1B,KAAK,OAAOC,GAAG,cAAcC,KAAK,cAAcL,YAAY,WACtG,4BAAQG,KAAK,UAAb,qBCmBS2B,EA1BC,SAACxC,GACf,OACE,yBAAKC,UAAU,yBACb,uCACA,wBAAIA,UAAU,WAEVD,EAAMyC,YAAYnB,KAAI,SAACoB,EAAOnB,GAC5B,OACE,wBAAIC,IAAKkB,EAAMC,MAAQC,KAAKC,UAC1B,4BACE3C,QAASF,EAAM8C,kBACf7C,UAAWD,EAAM+C,cAAgBxB,EAAQ,cAAgB,GACzDL,MAAOK,GAENmB,EAAMC,MALT,OAKoBD,EAAMM,OAL1B,MAKqCN,EAAMO,WAOrD,4BAAQhD,UAAU,eAAeC,QAASF,EAAMG,aAAhD,WCsiBS+C,E,YAviBb,aAAe,IAAD,8BACZ,+CA6CF3C,iBAAmB,SAAC4C,GAClBA,EAAEC,iBAEFC,IAAM,CACJC,IAAI,qCAAD,OAAuC,EAAKC,MAAMC,UAAlD,SACHC,OAAQ,MACRC,aAAc,SACbC,MAAK,SAACC,GACP,IAAMC,EAAsB,EAAKC,oBAAoB,EAAKP,MAAM3B,aAC1DmC,EAAsB,EAAKC,yBAAyBH,GAE1D,GAAID,EAASK,KAAK,GAAGxC,OAAS,EAAK8B,MAAMC,UAAUU,eAAiBN,EAASK,KAAK,GAAGE,cAAgBJ,EAAqB,CAExH,IAAIK,EAAa,YAAO,EAAKb,MAAMlC,WAC/BgD,EAAc,YAAO,EAAKd,MAAM7B,YAChC4C,EAAa,YAAO,EAAKf,MAAM5B,WAC/B4C,EAAe,YAAO,EAAKhB,MAAM3B,aAEjCgC,EAASK,KAAK,GAAGE,eAAiBJ,EAChC,EAAKR,MAAMxB,gBAAkB,GAC/BwC,EAAgBC,KAAKZ,EAASK,KAAK,IACnCG,EAAa,YAAOG,GACpBA,EAAkB,IACT,EAAKhB,MAAMxB,gBAAkB,IACtCwC,EAAgBC,KAAKZ,EAASK,KAAK,IACnCI,EAAc,YAAOE,GACrBA,EAAkB,KAElBA,EAAgBC,KAAKZ,EAASK,KAAK,IACnCK,EAAa,YAAOC,GACpBA,EAAkB,IAGpBA,EAAgBC,KACd,CACE/C,KAAM,EAAK8B,MAAMC,UACjBW,aAAcP,EAASK,KAAK,GAAGE,eAKrC,EAAKM,SAAS,CACZpD,UAAW+C,EACX1C,WAAY2C,EACZ1C,UAAW2C,EACX1C,YAAa2C,EACbxC,eAAgB,EAAKwB,MAAMxB,eAAiB6B,EAASK,KAAK,GAAGE,aAC7DO,aAAa,EACbC,cAAe,0BAEf,WACE,EAAKC,gBAAgB,EAAKrB,MAAMC,mBAG3BI,EAASK,KAAK,GAAGxC,OAAS,EAAK8B,MAAMC,UAAUU,cACxD,EAAKO,SAAS,CACZjB,UAAW,GACXrC,eAAgB,GAChBwD,cAAe,4DAERf,EAASK,KAAK,GAAGE,aAAeJ,GACzC,EAAKU,SAAS,CACZjB,UAAW,GACXrC,eAAgB,GAChBwD,cAAe,4DAGlBE,OAAM,WACP,EAAKJ,SAAS,CACZjB,UAAW,GACXrC,eAAgB,GAChBwD,cAAe,uDACfG,YAAa,SAtHL,EA2HdF,gBAAkB,SAACnD,GACjB,EAAKgD,SAAS,CAACM,wBAAwB,IAAO,WAC5C1B,IAAM,CACJC,IAAI,0CAAD,OAA4C7B,EAA5C,SACHgC,OAAQ,MACRC,aAAc,SACbC,MAAK,SAACC,GAEsB,IAAzBA,EAASK,KAAKpE,OAChB,EAAK4E,SAAS,CACZC,aAAa,EACblB,UAAW,GACX1B,gBAAiB,GACjBiD,wBAAwB,EACxBJ,cAAe,sEACfxD,eAAgB,MAGlB,EAAK6D,cAAcpB,EAASK,MAC5B,EAAKQ,SAAS,CACZM,wBAAwB,YA/IpB,EAsJdf,yBAA2B,SAACiB,GAQ1B,OALI,EAAK1B,MAAMxB,eAAiB,GAAK,EAAKwB,MAAMxB,gBAAkB,GAC1C,EAAIkD,EAEJ,EAAIA,GA5JhB,EAiKdC,eAAiB,SAACC,GAKhB,IAJA,IClLyCC,EAAKC,EDkLxCC,EAAgB,YAAOH,GAEvBI,EAAc,GAEX3F,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAE3B,IAAM4F,GCxLiCJ,EDwLU,ECxLLC,EDwLQC,EAAiBzF,OCvLvEuF,EAAMxC,KAAK6C,KAAKL,GAChBC,EAAMzC,KAAK8C,MAAML,GACVzC,KAAK8C,MAAM9C,KAAKC,UAAYwC,EAAMD,IAAQA,QDwLTO,IAAlCL,EAAiBE,IACnBD,EAAYf,KAAKc,EAAiBE,IAIpC/F,EAAgB6F,EAAiBE,GAAcF,GAEjD,OAAOC,GAlLK,EAqLdP,cAAgB,SAACY,GACf,IAcIL,EAdE1B,EAAsB,EAAKC,oBAAoB,EAAKP,MAAM3B,aAE1DmC,EAAsB,EAAKC,yBAAyBH,GAEpDgC,EAAQ,SAERC,EAAkBF,EAAQG,QAAO,SAACrG,GACtC,SAAIA,EAAKyE,cAAgBJ,GAAuBrE,EAAK+B,KAAKuE,MAAMH,KACvDnG,KAOPgF,GAAc,EACdC,EAAgB,wBAEhBmB,EAAgBjG,OAAS,EAC3B0F,EAAc,EAAKL,eAAeY,IAElCP,EAAc,GACdb,GAAc,EACdC,EAAgB,uEAGlB,EAAKF,SAAS,CACZwB,gBAAiBH,EACjBhE,gBAAiByD,EACjB/B,UAAW,GACXrC,eAAgB,GAChBuD,YAAaA,EACbC,cAAeA,KAtNL,EA2Ndb,oBAAsB,SAACoC,GAGrB,IAAIC,EAAwB,EAO5B,OALAD,EAAKE,SAAQ,SAAC1G,GAEZyG,GAAyBzG,EAAKyE,gBAGzBgC,GArOK,EAwOdvF,gBAAkB,SAACuC,GACjB,EAAKsB,SAAS,CACZjB,UAAWL,EAAEkD,OAAOnF,MACpBC,eAAgBgC,EAAEkD,OAAOnF,QAGJ,KAAnBiC,EAAEkD,OAAOnF,MACX,EAAKoF,wBAAwBnD,EAAEkD,OAAOnF,OAEtC,EAAKuD,SAAS,CACZK,YAAa,MAlPL,EAuPdwB,wBAA0B,SAACC,GACzBlD,IAAM,CACJC,IAAI,kCAAD,OAAoCiD,GACvC9C,OAAQ,MACRC,aAAc,SACbC,MAAK,SAACC,GACP,EAAKa,SAAS,CACZK,YAAalB,EAASK,WA9Pd,EAmQduC,oBAAsB,SAAC/E,GACrB,EAAKgD,SAAS,CACZjB,UAAW/B,EACXN,eAAgBM,EAChBqD,YAAa,MAvQH,EA2Qd9C,WAAa,SAACtC,GAEZ,IAAI0E,EAAa,YAAO,EAAKb,MAAMlC,WAC/BgD,EAAc,YAAO,EAAKd,MAAM7B,YAChC4C,EAAa,YAAO,EAAKf,MAAM5B,WAE/B8E,EAAa,YAAO,EAAKlD,MAAM3B,aACnC6E,EAAcjC,KAAK9E,GAEnB,IAAIgH,EAAqB,EAAKnD,MAAMxB,eAAiBrC,EAAKyE,aAEtDQ,EAAgB,wBAGO,IAAvB+B,GAEFtC,EAAa,YAAOqC,GACpBA,EAAgB,IACgB,KAAvBC,GACTrC,EAAc,YAAOoC,GACrBA,EAAgB,IACgB,KAAvBC,IACTpC,EAAa,YAAOmC,GACpBA,EAAgB,GAChB9B,EAAgB,IAGlB,EAAKF,SAAS,CACZ7C,YAAa6E,EACbpF,UAAW+C,EACX1C,WAAY2C,EACZ1C,UAAW2C,EACXvC,eAAgB2E,EAChB/B,cAAeA,IACd,WACG,EAAKpB,MAAMxB,eAAiB,IAC9B,EAAK6C,gBAAgBlF,EAAK+B,UA/SlB,EAqTdtB,YAAc,WACZ,EAAKsE,SAAS,CACZjB,UAAW,GACXnC,UAAW,GACXK,WAAY,GACZC,UAAW,GACXsE,gBAAiB,GACjBnE,gBAAiB,GACjBF,YAAa,GACbG,eAAgB,EAChB+C,YAAa,GACb3D,eAAgB,GAChBuD,aAAa,EACbiC,eAAe,EACfvG,aAAa,EACb2C,aAAa,EACb6D,WAAY,GACZC,YAAa,MAtUH,EA2Ud5E,UAAY,WACV,EAAKwC,SAAS,CACZ3C,gBAAiB,EAAKoD,eAAe,EAAK3B,MAAM0C,oBA7UtC,EAiVd3D,iBAAmB,SAACa,GAClB,EAAKsB,SAAS,CACZmC,WAAYzD,EAAEkD,OAAOnF,SAnVX,EAuVdqB,kBAAoB,SAACY,GACnB,EAAKsB,SAAS,CACZoC,YAAa1D,EAAEkD,OAAOnF,SAzVZ,EA6Vd4F,gBAAkB,WAChB,EAAKrC,SAAS,CACZsC,eAAgB,EAAKxD,MAAMwD,iBA/VjB,EAmWdC,cAAgB,WACd,EAAKvC,SAAS,CACZrE,aAAc,EAAKmD,MAAMnD,YACzBuG,eAAe,KAtWL,EA0WdtE,UAAY,SAACc,GAGX,IAAIR,EAAOK,EAFXG,EAAEC,iBAIAT,EAD4B,KAA1B,EAAKY,MAAMqD,WACL,WAEA,EAAKrD,MAAMqD,WAInB5D,EAD6B,KAA3B,EAAKO,MAAMsD,YACJ,YAEA,EAAKtD,MAAMsD,YAGtB,IAAMI,EAAc,IAAIC,KAClBC,EAAOF,EAAYG,cACnBC,EAAcJ,EAAYK,WAC1BC,EAAaN,EAAYO,UAEzBvE,EAAI,UAAMoE,EAAc,EAApB,YAAyBE,EAAzB,YAAuCJ,GAE3CzE,EAAQ,CACZC,MAAOA,EACPK,OAAQA,EACR3B,UAAW,EAAKkC,MAAMlC,UACtBK,WAAY,EAAK6B,MAAM7B,WACvBC,UAAW,EAAK4B,MAAM5B,UACtBsB,KAAMA,GAGMjE,EAASyI,WAAWC,MAE5BlD,KAAK9B,GAEX,EAAKoE,kBACL,EAAKE,iBA/YO,EAkZdlE,kBAAoB,SAAC6E,GACnB,IAAMjF,EAAQ,EAAKa,MAAMd,YAAYkF,EAAMtB,OAAOnF,OAElD,EAAKuD,SAAS,CACZ1B,YAAa6E,SAASD,EAAMtB,OAAOnF,OACnCG,UAAWqB,EAAMrB,UACjBK,WAAYgB,EAAMhB,WAClBC,UAAWe,EAAMf,aAtZnB,EAAK4B,MAAQ,CACXC,UAAW,GACXnC,UAAW,GACXK,WAAY,GACZC,UAAW,GACXsE,gBAAiB,GACjBnE,gBAAiB,GACjBF,YAAa,GACbG,eAAgB,EAChB2C,aAAa,EACbiC,eAAe,EACf7B,YAAa,GACb3D,eAAgB,GAChBwD,cAAe,kCACfI,wBAAwB,EACxBgC,eAAe,EACfH,WAAY,GACZC,YAAa,GACbpE,YAAa,GACbrC,aAAa,EACb2C,aAAa,GAvBH,E,iFA2BO,IAAD,OACJ/D,EAASyI,WAAWC,MAG5BG,GAAG,SAAS,SAACjE,GACjB,IAAIkE,EAAmB,GAEjBC,EAAiBnE,EAASoE,MAEhC,IAAK,IAAItF,KAASqF,EAChBD,EAAiBtD,KAAKuD,EAAerF,IAGvC,EAAK+B,SAAS,CACZhC,YAAaqF,S,+BAoXT,IAAD,OAEDG,EAAmBC,KAAKpE,oBAAoBoE,KAAK3E,MAAM3B,aACzDuG,EAAe,EACfD,KAAK3E,MAAMlC,UAAUxB,OAAS,GAAsC,IAAjCqI,KAAK3E,MAAM7B,WAAW7B,SAC3DsI,EAAe,GAGjB,IAAIC,GAAgB,EAOpB,OANKF,KAAK3E,MAAMwB,wBACdsD,YAAW,WACTD,GAAgB,IACf,KAIH,yBAAKnI,UAAU,OACb,yBAAKA,UAAU,aAEXiI,KAAK3E,MAAMoD,cACX,kBAAC,EAAD,CACExG,YAAe+H,KAAK/H,YACpBC,YAAe8H,KAAKlB,gBAGtB,yBAAK/G,UAAU,8BAEXiI,KAAK3E,MAAMxB,eAAiB,KAAOmG,KAAK3E,MAAMnD,YAC9C,yBAAKH,UAAU,mBACb,0CAAgBgI,EAAhB,MAAqCE,IAErC,KAGDD,KAAK3E,MAAMnD,YAIV,KAHA,yBAAKH,UAAU,iBACb,2BAAIiI,KAAK3E,MAAMoB,iBAQvBuD,KAAK3E,MAAMmB,YACT,kBAAC,EAAD,CACEnE,iBAAkB2H,KAAK3H,iBACvBK,gBAAiBsH,KAAKtH,gBACtBO,eAAgB+G,KAAK3E,MAAMpC,iBAE7B,KAIF+G,KAAK3E,MAAMmB,aAAewD,KAAK3E,MAAMuB,YAAYjF,OAAS,EACxD,yBAAKI,UAAU,2BACb,4BAEIiI,KAAK3E,MAAMuB,YAAYxD,KAAI,SAACgH,EAAY/G,GACtC,OACE,wBAAIC,IAAK8G,EAAa/G,GACpB,4BAAQrB,QAAU,kBAAK,EAAKsG,oBAAoB8B,EAAW7G,QAAS6G,EAAW7G,YAO3F,KAIFyG,KAAK3E,MAAMwB,wBAA0BqD,EACnC,kBAAC,IAAD,CACEG,KAAM,GACNC,MAAO,OACPC,IA/eF,6CAmfFP,KAAK3E,MAAMxB,eAAiB,GAC1B,kBAAC,EAAD,CACED,gBAAiBoG,KAAK3E,MAAMzB,gBAC5BC,eAAgBmG,KAAK3E,MAAMxB,eAC3BC,WAAYkG,KAAKlG,WACjBC,UAAWiG,KAAKjG,YAElB,KAK4B,KAA9BiG,KAAK3E,MAAMxB,gBAA0BmG,KAAK3E,MAAMwD,eAAkBmB,KAAK3E,MAAMnD,YAKzE,KAJF,kBAAC,EAAD,CACED,YAAa+H,KAAK/H,YAClBgC,KAAM+F,KAAKpB,kBAKfoB,KAAK3E,MAAMwD,cACT,kBAAC,EAAD,CACE1E,UAAW6F,KAAK7F,UAChBC,iBAAkB4F,KAAK5F,iBACvBC,kBAAmB2F,KAAK3F,oBAE1B,KAGF2F,KAAK3E,MAAMnD,YACT,kBAAC,EAAD,CACE2C,YAAamF,KAAK3E,MAAMR,YACxBN,YAAayF,KAAK3E,MAAMd,YACxBK,kBAAmBoF,KAAKpF,kBACxB3C,YAAa+H,KAAK/H,cAEpB,MAIR,yBAAKF,UAAU,YACb,kBAAC,EAAD,CACEoB,UAAW6G,KAAK3E,MAAMlC,UACtBK,WAAYwG,KAAK3E,MAAM7B,WACvBC,UAAWuG,KAAK3E,MAAM5B,UACtBC,YAAasG,KAAK3E,MAAM3B,cAG1B,yBAAK3B,UAAU,YACb,yBAAKyI,IAAKC,IAAYC,IAAI,Y,GA/hBlBC,aETEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjD,MACvB,2DCZNkD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7F,MAAK,SAAA8F,GACJA,EAAaC,gBAEd7E,OAAM,SAAA8E,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.10fc1ca3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/haiku-japanese.d2949f10.jpg\";","import firebase from 'firebase';\r\n// < !--The core Firebase JS SDK is always required and must be listed first-- >\r\n//     <script src=\"https://www.gstatic.com/firebasejs/7.10.0/firebase-app.js\"></script>\r\n\r\n//     <!--TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries -->\r\n\r\n// <script>\r\n    // Your web app's Firebase configuration\r\n    const firebaseConfig = {\r\n        apiKey: \"AIzaSyBE8auObjMYjHy4DjuMxCbCJBZNSE8MKl8\",\r\n    authDomain: \"haikyou-project-6.firebaseapp.com\",\r\n    databaseURL: \"https://haikyou-project-6.firebaseio.com\",\r\n    projectId: \"haikyou-project-6\",\r\n    storageBucket: \"haikyou-project-6.appspot.com\",\r\n    messagingSenderId: \"85831219483\",\r\n    appId: \"1:85831219483:web:7d0848f2dc29dea534bbbe\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n// </script>\r\n\r\nexport default firebase;","export default function removeFromArray(item, array) {\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (array[i] === item) {\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n};\r\n\r\n","import React from 'react';\r\n\r\nconst Header = (props) => {\r\n  return(\r\n    <header>\r\n      <div className=\"wrapper\">\r\n        <h1>HaikYou</h1>\r\n        <p>A haiku is a Japanese poem of seventeen syllables, in three lines of five, seven, and five, traditionally evoking images of the natural world. Create your own!</p>\r\n\r\n        <div className=\"homeButtonDiv\">\r\n          <button className=\"homeButton\" onClick={props.createHaiku}>\r\n              Write\r\n          </button>\r\n\r\n          <button className=\"homeButton\" onClick={props.showJournal}>\r\n              Journal\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleFormSubmit} action=\"submit\" className=\"form wrapper\">\r\n      <label className=\"visuallyHidden\" htmlFor=\"userInput\">Type a word:</label>\r\n      <input placeholder=\"Type a word here\" onChange={props.handleUserInput} type=\"text\" id=\"userInput\" name=\"userInput\" pattern=\"^[a-zA-Z]*$\" autoComplete=\"off\" value={props.inputTextValue} />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Haiku = (props) => {\r\n  return (\r\n    <div className=\"printedHaiku wrapper\">\r\n\r\n      {\r\n        props.firstLine.length > 0 ?\r\n          <p className=\"line firstLine\">\r\n            {\r\n              props.firstLine.map((item, index) => {\r\n                return <span key={item.word + index}>{item.word} </span>\r\n              })\r\n            }\r\n          </p>\r\n        : null\r\n      }\r\n\r\n      {\r\n        props.secondLine.length > 0 ?\r\n          <p className=\"line secondLine\">\r\n            {\r\n              props.secondLine.map((item, index) => {\r\n                return <span key={item.word + index}>{item.word} </span>\r\n              })\r\n            }\r\n          </p>\r\n        : null\r\n      }\r\n\r\n      {\r\n        props.thirdLine.length > 0 ?\r\n          <p className=\"line thirdLine\">\r\n            {\r\n              props.thirdLine.map((item, index) => {\r\n                return <span key={item.word + index}>{item.word} </span>\r\n              })\r\n            }\r\n          </p>\r\n        : null\r\n      }\r\n\r\n      {\r\n        props.currentLine.length > 0 ?\r\n          <p className=\"line currentLine underline\">\r\n            {\r\n              props.currentLine.map((item, index) => {\r\n                return <span key={item.word + index}>{item.word} </span>\r\n              })\r\n            }\r\n          </p>\r\n        : null\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Haiku;","import React from 'react';\r\n\r\nconst RelatedWords = (props) => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <ul className=\"relatedWords\">\r\n        {\r\n          props.tenRelatedWords.length > 0 && props.totalSyllables < 17 ?\r\n            props.tenRelatedWords.map((item, index) => {\r\n              return (\r\n                <li key={item.word + index}>\r\n                  <button className=\"chosenWord\" onClick={() => props.wordChosen(item)}>{item.word}</button>\r\n                </li>\r\n              )\r\n            }) \r\n          : null\r\n        }\r\n      </ul>\r\n\r\n      {\r\n        props.tenRelatedWords.length > 0 && props.totalSyllables < 17 ?\r\n          <div className=\"moreWordsButton\">\r\n            <button onClick={props.moreWords}>More words</button>\r\n          </div>\r\n        : null\r\n      }\r\n    </div>\r\n    )\r\n  }\r\n\r\nexport default RelatedWords;\r\n\r\n","import React from 'react';\r\n\r\nconst Restart = (props) => {\r\n  return (\r\n    <div className=\"restart wrapper\">\r\n      <h2>Your haiku is complete!</h2>\r\n      <button onClick={props.createHaiku}>Write</button>\r\n      <button onClick={props.save}>Save</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Restart;","import React from 'react';\r\n\r\nconst TitleForm = (props) => {\r\n  return (\r\n    <form action=\"submit\" onSubmit={props.saveHaiku} className=\"titleForm wrapper\">\r\n      <label htmlFor=\"titleInput\" className=\"visuallyHidden\">Title: </label>\r\n      <input onChange={props.handleTitleInput} type=\"text\" id=\"titleInput\" name=\"titleInput\" placeholder=\"Title\" />\r\n      <label htmlFor=\"authorInput\" className=\"visuallyHidden\">Author: </label>\r\n      <input onChange={props.handleAuthorInput} type=\"text\" id=\"authorInput\" name=\"authorInput\" placeholder=\"Author\" />\r\n      <button type=\"submit\">Save to Journal</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TitleForm;","import React from 'react';\r\n\r\nconst Journal = (props) => {\r\n  return (\r\n    <div className=\"wrapper journalParent\">\r\n      <h2>Journal</h2>\r\n      <ul className=\"journal\">\r\n        {\r\n          props.savedHaikus.map((haiku, index) => {\r\n            return (\r\n              <li key={haiku.title + Math.random()}>\r\n                <button\r\n                  onClick={props.displayJournalLog}\r\n                  className={props.activeHaiku === index ? 'activeHaiku' : ''}\r\n                  value={index}\r\n                >\r\n                  {haiku.title} by {haiku.author} - {haiku.date}\r\n                </button>\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n      <button className=\"journalWrite\" onClick={props.createHaiku}>Write</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Journal;","import React, { Component } from 'react';\r\nimport firebase from './firebase';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport { getRandomIntInRangeExclusive } from './randomizers';\r\nimport removeFromArray from './removeFromArray';\r\nimport Header from './Components/Header';\r\nimport Form from './Components/Form';\r\nimport Haiku from './Components/Haiku';\r\nimport RelatedWords from './Components/RelatedWords';\r\nimport Restart from './Components/Restart';\r\nimport HaikuImage from './assets/haiku-japanese.jpg';\r\nimport SyncLoader from \"react-spinners/SyncLoader\";\r\nimport TitleForm from './Components/TitleForm';\r\nimport Journal from './Components/Journal';\r\n\r\nconst override = `\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      userInput: '',\r\n      firstLine: [],\r\n      secondLine: [],\r\n      thirdLine: [],\r\n      allRelatedWords: [],\r\n      tenRelatedWords: [],\r\n      currentLine: [],\r\n      totalSyllables: 0,\r\n      formVisible: false,\r\n      headerVisible: true,\r\n      suggestions: [],\r\n      inputTextValue: '',\r\n      messageToUser: 'Letter characters only, please.',\r\n      areRelatedWordsLoading: false,\r\n      showTitleForm: false,\r\n      titleInput: '',\r\n      authorInput: '',\r\n      savedHaikus: [],\r\n      showJournal: false,\r\n      activeHaiku: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref();\r\n\r\n    \r\n    dbRef.on('value', (response) => {\r\n      let savedHaikusArray = [];\r\n      \r\n      const savedHaikusRaw = response.val();\r\n      \r\n      for (let haiku in savedHaikusRaw) {\r\n        savedHaikusArray.push(savedHaikusRaw[haiku]);\r\n      }\r\n\r\n      this.setState({\r\n        savedHaikus: savedHaikusArray\r\n      });\r\n    });\r\n  }\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios({\r\n      url: `https://api.datamuse.com/words?sp=${this.state.userInput}&md=s`,\r\n      method: 'GET',\r\n      responseType: 'json',\r\n    }).then((response) => {\r\n      const totalSyllablesSoFar = this.getSyllablesPerLine(this.state.currentLine);\r\n      const maxSyllablesAllowed = this.checkMaxSyllablesAllowed(totalSyllablesSoFar);\r\n\r\n      if (response.data[0].word === this.state.userInput.toLowerCase() && response.data[0].numSyllables <= maxSyllablesAllowed) {\r\n\r\n        let firstLineCopy = [...this.state.firstLine];\r\n        let secondLineCopy = [...this.state.secondLine];\r\n        let thirdLineCopy = [...this.state.thirdLine];\r\n        let currentLineCopy = [...this.state.currentLine];\r\n\r\n        if (response.data[0].numSyllables === maxSyllablesAllowed) {\r\n          if (this.state.totalSyllables <= 5) {\r\n            currentLineCopy.push(response.data[0]);\r\n            firstLineCopy = [...currentLineCopy];\r\n            currentLineCopy = [];\r\n          } else if (this.state.totalSyllables <= 12) {\r\n            currentLineCopy.push(response.data[0]);\r\n            secondLineCopy = [...currentLineCopy];\r\n            currentLineCopy = [];\r\n          } else {\r\n            currentLineCopy.push(response.data[0]);\r\n            thirdLineCopy = [...currentLineCopy];\r\n            currentLineCopy = [];\r\n          }\r\n        } else {\r\n          currentLineCopy.push(\r\n            {\r\n              word: this.state.userInput,\r\n              numSyllables: response.data[0].numSyllables\r\n            }\r\n          );\r\n        }\r\n  \r\n        this.setState({\r\n          firstLine: firstLineCopy,\r\n          secondLine: secondLineCopy,\r\n          thirdLine: thirdLineCopy,\r\n          currentLine: currentLineCopy,\r\n          totalSyllables: this.state.totalSyllables + response.data[0].numSyllables,\r\n          formVisible: false,\r\n          messageToUser: 'Choose the next word.'\r\n        },\r\n          () => {\r\n            this.getRelatedWords(this.state.userInput);\r\n          }\r\n        );\r\n      } else if (response.data[0].word !== this.state.userInput.toLowerCase()) {\r\n        this.setState({\r\n          userInput: '',\r\n          inputTextValue: '',\r\n          messageToUser: 'I think you may have misspelled that. Please try again.'\r\n        });\r\n      } else if (response.data[0].numSyllables > maxSyllablesAllowed) {\r\n        this.setState({\r\n          userInput: '',\r\n          inputTextValue: '',\r\n          messageToUser: 'That word is too many syllables. Please try another.'\r\n        });\r\n      }\r\n    }).catch(() => {\r\n      this.setState({\r\n        userInput: '',\r\n        inputTextValue: '',\r\n        messageToUser: \"That word doesn't seem to exist. Please try another.\",\r\n        suggestions: []\r\n      });\r\n    });\r\n  }\r\n\r\n  getRelatedWords = (word) => {\r\n    this.setState({areRelatedWordsLoading: true}, () => {\r\n      axios({\r\n        url: `https://api.datamuse.com/words?rel_bga=${word}&md=s`,\r\n        method: 'GET',\r\n        responseType: 'json',\r\n      }).then((response) => {\r\n\r\n        if (response.data.length === 0) {\r\n          this.setState({\r\n            formVisible: true,\r\n            userInput: '',\r\n            tenRelatedWords: [],\r\n            areRelatedWordsLoading: false,\r\n            messageToUser: \"Couldn't find any words related to that. Please enter the next one.\",\r\n            inputTextValue: ''\r\n          });\r\n        } else {\r\n          this.filterResults(response.data);\r\n          this.setState({\r\n            areRelatedWordsLoading: false,\r\n          })\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n  checkMaxSyllablesAllowed = (syllablesSoFar) => {\r\n    let maxSyllablesAllowed;\r\n\r\n    if (this.state.totalSyllables < 5 || this.state.totalSyllables >= 12) {\r\n      maxSyllablesAllowed = 5 - syllablesSoFar;\r\n    } else {\r\n      maxSyllablesAllowed = 7 - syllablesSoFar;\r\n    }\r\n    return maxSyllablesAllowed;\r\n  }\r\n\r\n  randomizeWords = (relatedWords) => {\r\n    const relatedWordsCopy = [...relatedWords];\r\n\r\n    const randomWords = [];\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n      // Find random index\r\n      const randomIndex = getRandomIntInRangeExclusive(0, relatedWordsCopy.length);\r\n\r\n      // Push random index of relatedWordsCopy array into randomWords array\r\n      if (relatedWordsCopy[randomIndex] !== undefined) {\r\n        randomWords.push(relatedWordsCopy[randomIndex]);\r\n      }\r\n\r\n      // Remove random index from relatedWordsCopy array to prevent duplicates in randomWords array\r\n      removeFromArray(relatedWordsCopy[randomIndex], relatedWordsCopy);\r\n    }\r\n    return randomWords\r\n  }\r\n\r\n  filterResults = (results) => {\r\n    const totalSyllablesSoFar = this.getSyllablesPerLine(this.state.currentLine);\r\n\r\n    const maxSyllablesAllowed = this.checkMaxSyllablesAllowed(totalSyllablesSoFar);\r\n\r\n    const regex = /[a-z]/g;\r\n\r\n    const filteredResults = results.filter((item) => {\r\n      if (item.numSyllables <= maxSyllablesAllowed && item.word.match(regex)) {\r\n        return item;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n\r\n    let randomWords;\r\n    let formVisible = false;\r\n    let messageToUser = 'Choose the next word.';\r\n\r\n    if (filteredResults.length > 0) {\r\n      randomWords = this.randomizeWords(filteredResults);\r\n    } else {\r\n      randomWords = [];\r\n      formVisible = true;\r\n      messageToUser = \"Couldn't find any words related to that. Please enter the next one.\";\r\n    }\r\n\r\n    this.setState({\r\n      allRelatedWords: filteredResults,\r\n      tenRelatedWords: randomWords,\r\n      userInput: '',\r\n      inputTextValue: '',\r\n      formVisible: formVisible,\r\n      messageToUser: messageToUser\r\n    })\r\n  }\r\n\r\n  // Provide a line to check and get the total number of syllables within that line\r\n  getSyllablesPerLine = (line) => {\r\n    // Line will be an array that is received from state\r\n\r\n    let numberOfSyllablesLine = 0;\r\n    // Loop through each item in the line array provided\r\n    line.forEach((item) => {\r\n      // Add the number of syllables in this word to the sum variable\r\n      numberOfSyllablesLine += item.numSyllables;\r\n    });\r\n    // Return the total sum of syllables\r\n    return numberOfSyllablesLine;\r\n  }\r\n\r\n  handleUserInput = (e) => {\r\n    this.setState({\r\n      userInput: e.target.value,\r\n      inputTextValue: e.target.value\r\n    });\r\n\r\n    if (e.target.value !== '') {\r\n      this.autoCompleteSuggestions(e.target.value);\r\n    } else {\r\n      this.setState({\r\n        suggestions: []\r\n      });\r\n    }\r\n  }\r\n\r\n  autoCompleteSuggestions = (input) => {\r\n    axios({\r\n      url: `https://api.datamuse.com/sug?s=${input}`,\r\n      method: 'GET',\r\n      responseType: 'json'\r\n    }).then((response)=> {\r\n      this.setState({\r\n        suggestions: response.data\r\n      });\r\n    })\r\n  }\r\n\r\n  chooseSuggestedWord = (word) => {\r\n    this.setState({\r\n      userInput: word,\r\n      inputTextValue: word,\r\n      suggestions: []\r\n    });\r\n  }\r\n\r\n  wordChosen = (item) => {\r\n\r\n    let firstLineCopy = [...this.state.firstLine];\r\n    let secondLineCopy = [...this.state.secondLine];\r\n    let thirdLineCopy = [...this.state.thirdLine];\r\n\r\n    let lineArrayCopy = [...this.state.currentLine];\r\n    lineArrayCopy.push(item);\r\n\r\n    let totalSyllablesCopy = this.state.totalSyllables + item.numSyllables;\r\n\r\n    let messageToUser = 'Choose the next word.';\r\n\r\n    //if the current line is line one, and syllables so far is five, then move to line two and update the current line to two\r\n    if (totalSyllablesCopy === 5) {\r\n      //when we've reached our cap, push the array to first line, reset current line to an empty array\r\n      firstLineCopy = [...lineArrayCopy];\r\n      lineArrayCopy = [];\r\n    } else if (totalSyllablesCopy === 12) {\r\n      secondLineCopy = [...lineArrayCopy];\r\n      lineArrayCopy = [];\r\n    } else if (totalSyllablesCopy === 17) {\r\n      thirdLineCopy = [...lineArrayCopy];\r\n      lineArrayCopy = [];\r\n      messageToUser = '';\r\n    }\r\n\r\n    this.setState({\r\n      currentLine: lineArrayCopy,\r\n      firstLine: firstLineCopy,\r\n      secondLine: secondLineCopy,\r\n      thirdLine: thirdLineCopy,\r\n      totalSyllables: totalSyllablesCopy,\r\n      messageToUser: messageToUser\r\n    }, () => {\r\n      if (this.state.totalSyllables < 17) {\r\n        this.getRelatedWords(item.word)\r\n      }\r\n    })\r\n  }\r\n\r\n  // This is the event handler for the Journal button on our home screen, as well as our \"restart\" button\r\n  createHaiku = () => {\r\n    this.setState({\r\n      userInput: '', \r\n      firstLine: [],\r\n      secondLine: [],\r\n      thirdLine: [],\r\n      allRelatedWords: [],\r\n      tenRelatedWords: [],\r\n      currentLine: [],\r\n      totalSyllables: 0,\r\n      suggestions: [],\r\n      inputTextValue: '',\r\n      formVisible: true,\r\n      headerVisible: false,\r\n      showJournal: false,\r\n      activeHaiku: false,\r\n      titleInput: '',\r\n      authorInput: '',\r\n    })\r\n  }\r\n\r\n  // This button will get user more words related to their word of choice\r\n  moreWords = () => {\r\n    this.setState({\r\n      tenRelatedWords: this.randomizeWords(this.state.allRelatedWords)\r\n    })\r\n  }\r\n\r\n  handleTitleInput = (e) => {\r\n    this.setState({\r\n      titleInput: e.target.value\r\n    });\r\n  }\r\n\r\n  handleAuthorInput = (e) => {\r\n    this.setState({\r\n      authorInput: e.target.value\r\n    });\r\n  }\r\n\r\n  toggleTitleForm = () => {\r\n    this.setState({\r\n      showTitleForm: !this.state.showTitleForm\r\n    });\r\n  }\r\n\r\n  toggleJournal = () => {\r\n    this.setState({\r\n      showJournal: !this.state.showJournal,\r\n      headerVisible: false\r\n    })\r\n  }\r\n\r\n  saveHaiku = (e) => {\r\n    e.preventDefault();\r\n\r\n    let title, author;\r\n    if (this.state.titleInput === '') {\r\n      title = 'Untitled';\r\n    } else {\r\n      title = this.state.titleInput;\r\n    }\r\n\r\n    if (this.state.authorInput === '') {\r\n      author = 'Anonymous';\r\n    } else {\r\n      author = this.state.authorInput;\r\n    }\r\n\r\n    const currentDate = new Date();\r\n    const year = currentDate.getFullYear();\r\n    const monthNumber = currentDate.getMonth();\r\n    const dayOfMonth = currentDate.getDate();\r\n\r\n    const date = `${monthNumber + 1}-${dayOfMonth}-${year}`;\r\n\r\n    const haiku = {\r\n      title: title,\r\n      author: author,\r\n      firstLine: this.state.firstLine,\r\n      secondLine: this.state.secondLine,\r\n      thirdLine: this.state.thirdLine,\r\n      date: date\r\n    };\r\n\r\n    const dbRef = firebase.database().ref();\r\n\r\n    dbRef.push(haiku);\r\n\r\n    this.toggleTitleForm();\r\n    this.toggleJournal();\r\n  }\r\n\r\n  displayJournalLog = (event) => {\r\n    const haiku = this.state.savedHaikus[event.target.value]\r\n\r\n    this.setState({\r\n      activeHaiku: parseInt(event.target.value),\r\n      firstLine: haiku.firstLine,\r\n      secondLine: haiku.secondLine,\r\n      thirdLine: haiku.thirdLine,\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const currentSyllables = this.getSyllablesPerLine(this.state.currentLine);\r\n    let maxSyllables = 5;\r\n    if (this.state.firstLine.length > 0 && this.state.secondLine.length === 0) {\r\n      maxSyllables = 7;\r\n    }\r\n\r\n    let showPreloader = false;\r\n    if (!this.state.areRelatedWordsLoading) {\r\n      setTimeout(() => {\r\n        showPreloader = true;\r\n      }, 300);\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"rightHalf\">\r\n          {\r\n            this.state.headerVisible ?\r\n            <Header\r\n              createHaiku = {this.createHaiku}\r\n              showJournal = {this.toggleJournal}\r\n            />\r\n            :\r\n            <div className=\"wrapper informationForUser\">\r\n              {\r\n                this.state.totalSyllables < 17 && !this.state.showJournal ? \r\n                <div className=\"syllableCounter\">\r\n                  <h3> Syllables {currentSyllables} / {maxSyllables}</h3>\r\n                </div>\r\n                : null\r\n              }\r\n              {\r\n                !this.state.showJournal ? \r\n                  <div className=\"messageToUser\">\r\n                    <p>{this.state.messageToUser}</p>\r\n                  </div>\r\n                : null\r\n              }\r\n            </div>\r\n          }\r\n\r\n          {\r\n            this.state.formVisible ?\r\n              <Form\r\n                handleFormSubmit={this.handleFormSubmit}\r\n                handleUserInput={this.handleUserInput}\r\n                inputTextValue={this.state.inputTextValue}\r\n              />\r\n            : null\r\n          }\r\n        \r\n          {\r\n            this.state.formVisible && this.state.suggestions.length > 0 ?\r\n              <div className=\"autoCompleteSuggestions\">\r\n                <ul>\r\n                  {\r\n                    this.state.suggestions.map((suggestion, index)=> {\r\n                      return (\r\n                        <li key={suggestion + index}>\r\n                          <button onClick={ ()=> this.chooseSuggestedWord(suggestion.word) }>{suggestion.word}</button>\r\n                        </li>\r\n                      );\r\n                    })\r\n                  }\r\n                </ul>\r\n              </div>\r\n            : null\r\n          }\r\n\r\n          {\r\n            this.state.areRelatedWordsLoading && showPreloader ?\r\n              <SyncLoader\r\n                size={15}\r\n                color={\"#fff\"}\r\n                css={override}\r\n              />\r\n            :\r\n            \r\n            this.state.totalSyllables < 17 ?\r\n              <RelatedWords\r\n                tenRelatedWords={this.state.tenRelatedWords}\r\n                totalSyllables={this.state.totalSyllables}\r\n                wordChosen={this.wordChosen}\r\n                moreWords={this.moreWords}\r\n              />\r\n            : null\r\n            \r\n          }\r\n\r\n          {\r\n            this.state.totalSyllables === 17 && !this.state.showTitleForm && !this.state.showJournal ?\r\n              <Restart\r\n                createHaiku={this.createHaiku}\r\n                save={this.toggleTitleForm}\r\n              />\r\n              : null    \r\n          }\r\n          {\r\n            this.state.showTitleForm ?\r\n              <TitleForm\r\n                saveHaiku={this.saveHaiku}\r\n                handleTitleInput={this.handleTitleInput}\r\n                handleAuthorInput={this.handleAuthorInput}\r\n              />\r\n            : null\r\n          }\r\n          {\r\n            this.state.showJournal ?\r\n              <Journal\r\n                activeHaiku={this.state.activeHaiku}\r\n                savedHaikus={this.state.savedHaikus}\r\n                displayJournalLog={this.displayJournalLog}\r\n                createHaiku={this.createHaiku}\r\n              />\r\n            : null\r\n          }\r\n      </div>\r\n\r\n      <div className=\"leftHalf\">\r\n        <Haiku\r\n          firstLine={this.state.firstLine}\r\n          secondLine={this.state.secondLine}\r\n          thirdLine={this.state.thirdLine}\r\n          currentLine={this.state.currentLine}\r\n        />\r\n\r\n        <div className=\"japanese\">\r\n          <img src={HaikuImage} alt=\"\"/>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export default function getRandomIntInRange(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport function getRandomIntInRangeExclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nexport function getRandomFloatInRange(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\nexport function probability(n) {\r\n    return n > 0 && Math.random() <= n;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}